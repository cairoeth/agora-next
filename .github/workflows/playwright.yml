name: E2E Tests (1.1)
on:
  deployment_status:
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    if: github.event.deployment_status.state == 'success'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Install Playwright
        run: npx playwright install --with-deps
      - name: Determine Tenant Name and Control Test Execution
        id: set_vars
        run: |
          echo "PLAYWRIGHT_TEST_BASE_URL=${{ github.event.deployment_status.target_url }}" >> $GITHUB_ENV
          echo "VERCEL_ENV=${{ github.event.deployment_status.environment }}" >> $GITHUB_ENV
          if [[ "${{ github.event.deployment_status.environment }}" == "Preview – agora-next-etherfi" ]]; then
            echo "NEXT_PUBLIC_AGORA_INSTANCE_NAME=etherfi" >> $GITHUB_ENV
          elif [[ "${{ github.event.deployment_status.environment }}" == "Preview – agora-next-ens" ]]; then
            echo "NEXT_PUBLIC_AGORA_INSTANCE_NAME=ens" >> $GITHUB_ENV
          elif [[ "${{ github.event.deployment_status.environment }}" == "Preview – agora-next" ]]; then
            echo "NEXT_PUBLIC_AGORA_INSTANCE_NAME=optimism" >> $GITHUB_ENV
          else
            echo "SKIP_TESTS=true" >> $GITHUB_ENV
          fi
      - name: Check if tests should be skipped
        if: env.SKIP_TESTS == 'true'
        run: |
          echo "Skipping tests for tenant $NEXT_PUBLIC_AGORA_INSTANCE_NAME"
          exit 0
      - name: Run Playwright tests
        if: env.SKIP_TESTS != 'true'
        run: npx playwright test
        env:
          PLAYWRIGHT_TEST_BASE_URL: ${{ github.event.deployment_status.target_url }}
          VERCEL_ENV: ${{ github.event.deployment_status.environment }}
          NEXT_PUBLIC_AGORA_INSTANCE_NAME: ${{ env.NEXT_PUBLIC_AGORA_INSTANCE_NAME }}
